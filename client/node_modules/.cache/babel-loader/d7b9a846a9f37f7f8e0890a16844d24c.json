{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petel\\\\Documents\\\\CODE\\\\concordia-bootcamps\\\\project-slingair\\\\frontend\\\\src\\\\components\\\\AppContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext(null);\nexport const AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [availableFlights, setAvailableFlights] = useState([]);\n  const [selectedFlight, setSelectedFlight] = useState(\"\");\n  const [selectedSeat, setSelectedSeat] = useState(\"\");\n  const [reservationId, setReservationId] = useState(\"\");\n  const [currentReservation, setCurrentReservation] = useState({});\n  const [showCancelSuccessModal, setShowCancelSuccessModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async ev => {\n    // TODO if incorrect data entered, highlight which field it came from\n    ev.preventDefault();\n\n    try {\n      const {\n        firstName,\n        lastName,\n        email\n      } = ev.currentTarget.elements;\n      const firstNameValid = firstName.value.length >= 1;\n      const lastNameValid = lastName.value.length >= 1;\n      const emailValid = email.value.indexOf(\"@\") >= 1 && email.value.indexOf(\".\") <= email.value.length - 3;\n\n      if (firstNameValid && lastNameValid && emailValid) {\n        setLoading(true);\n        const reservationResponse = await fetch(\"/api/add-reservation\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            flight: selectedFlight,\n            seat: selectedSeat,\n            givenName: firstName.value,\n            surname: lastName.value,\n            email: email.value\n          })\n        });\n        const updateSeats = await fetch(`/api/update-availability?flightNum=${selectedFlight}&seatId=${selectedSeat}&isAvailable=n`, {\n          method: \"PATCH\"\n        });\n        console.log(updateSeats);\n        const {\n          data\n        } = await reservationResponse.json();\n        console.log(data);\n\n        if (data.insertedId) {\n          setReservationId(data.insertedId);\n          setLoading(false);\n          history.push(\"/confirmed\");\n          return;\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      availableFlights,\n      setAvailableFlights,\n      selectedFlight,\n      setSelectedFlight,\n      selectedSeat,\n      setSelectedSeat,\n      reservationId,\n      setReservationId,\n      currentReservation,\n      setCurrentReservation,\n      showCancelSuccessModal,\n      setShowCancelSuccessModal,\n      loading,\n      setLoading,\n      handleSubmit\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"15NiLR0uw8P26iW1iINbi5Om65s=\");\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/petel/Documents/CODE/concordia-bootcamps/project-slingair/frontend/src/components/AppContext.js"],"names":["useState","createContext","AppContext","AppProvider","children","availableFlights","setAvailableFlights","selectedFlight","setSelectedFlight","selectedSeat","setSelectedSeat","reservationId","setReservationId","currentReservation","setCurrentReservation","showCancelSuccessModal","setShowCancelSuccessModal","loading","setLoading","handleSubmit","ev","preventDefault","firstName","lastName","email","currentTarget","elements","firstNameValid","value","length","lastNameValid","emailValid","indexOf","reservationResponse","fetch","method","headers","Accept","body","JSON","stringify","flight","seat","givenName","surname","updateSeats","console","log","data","json","insertedId","history","push","err"],"mappings":"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","sourcesContent":["import { useState, createContext } from \"react\";\r\n\r\nexport const AppContext = createContext(null);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [availableFlights, setAvailableFlights] = useState([]);\r\n  const [selectedFlight, setSelectedFlight] = useState(\"\");\r\n  const [selectedSeat, setSelectedSeat] = useState(\"\");\r\n  const [reservationId, setReservationId] = useState(\"\");\r\n  const [currentReservation, setCurrentReservation] = useState({});\r\n  const [showCancelSuccessModal, setShowCancelSuccessModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (ev) => {\r\n    // TODO if incorrect data entered, highlight which field it came from\r\n    ev.preventDefault();\r\n    try {\r\n      const { firstName, lastName, email } = ev.currentTarget.elements;\r\n\r\n      const firstNameValid = firstName.value.length >= 1;\r\n      const lastNameValid = lastName.value.length >= 1;\r\n      const emailValid =\r\n        email.value.indexOf(\"@\") >= 1 &&\r\n        email.value.indexOf(\".\") <= email.value.length - 3;\r\n      if (firstNameValid && lastNameValid && emailValid) {\r\n        setLoading(true);\r\n        const reservationResponse = await fetch(\"/api/add-reservation\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            flight: selectedFlight,\r\n            seat: selectedSeat,\r\n            givenName: firstName.value,\r\n            surname: lastName.value,\r\n            email: email.value,\r\n          }),\r\n        });\r\n\r\n        const updateSeats = await fetch(\r\n          `/api/update-availability?flightNum=${selectedFlight}&seatId=${selectedSeat}&isAvailable=n`,\r\n          {\r\n            method: \"PATCH\",\r\n          }\r\n        );\r\n        console.log(updateSeats);\r\n\r\n        const { data } = await reservationResponse.json();\r\n        console.log(data);\r\n\r\n        if (data.insertedId) {\r\n          setReservationId(data.insertedId);\r\n          setLoading(false);\r\n          history.push(\"/confirmed\");\r\n          return;\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        availableFlights,\r\n        setAvailableFlights,\r\n        selectedFlight,\r\n        setSelectedFlight,\r\n        selectedSeat,\r\n        setSelectedSeat,\r\n        reservationId,\r\n        setReservationId,\r\n        currentReservation,\r\n        setCurrentReservation,\r\n        showCancelSuccessModal,\r\n        setShowCancelSuccessModal,\r\n        loading,\r\n        setLoading,\r\n        handleSubmit,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}