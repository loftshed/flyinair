{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nconst {\n  selectedFlight,\n  selectedSeat\n} = useContext(AppContext);\n\nconst HandleSubmit = async ev => {\n  _s();\n\n  const history = useHistory(); // TODO if incorrect data entered, highlight which field it came from\n\n  ev.preventDefault();\n\n  try {\n    const {\n      firstName,\n      lastName,\n      email\n    } = ev.currentTarget.elements;\n    const firstNameValid = firstName.value.length >= 1;\n    const lastNameValid = lastName.value.length >= 1;\n    const emailValid = email.value.indexOf(\"@\") >= 1 && email.value.indexOf(\".\") <= email.value.length - 3;\n\n    if (firstNameValid && lastNameValid && emailValid) {\n      const response = await fetch(\"/api/add-reservation\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          flight: selectedFlight,\n          seat: selectedSeat,\n          givenName: firstName.value,\n          surname: lastName.value,\n          email: email.value\n        })\n      });\n      const newReservationId = await response.json().insertedId;\n      if (newReservationId) setReservationId(newReservationId);\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n_s(HandleSubmit, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = HandleSubmit;\nexport default {\n  handleSubmit\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleSubmit\");","map":{"version":3,"sources":["C:/Users/petel/Documents/CODE/concordia-bootcamps/project-slingair/frontend/src/utilities.js"],"names":["useHistory","selectedFlight","selectedSeat","useContext","AppContext","HandleSubmit","ev","history","preventDefault","firstName","lastName","email","currentTarget","elements","firstNameValid","value","length","lastNameValid","emailValid","indexOf","response","fetch","method","headers","Accept","body","JSON","stringify","flight","seat","givenName","surname","newReservationId","json","insertedId","setReservationId","err","console","log","handleSubmit"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,MAAM;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,IAAmCC,UAAU,CAACC,UAAD,CAAnD;;AAEA,MAAMC,YAAY,GAAG,MAAOC,EAAP,IAAc;AAAA;;AACjC,QAAMC,OAAO,GAAGP,UAAU,EAA1B,CADiC,CAEjC;;AACAM,EAAAA,EAAE,CAACE,cAAH;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA;AAAvB,QAAiCL,EAAE,CAACM,aAAH,CAAiBC,QAAxD;AAEA,UAAMC,cAAc,GAAGL,SAAS,CAACM,KAAV,CAAgBC,MAAhB,IAA0B,CAAjD;AACA,UAAMC,aAAa,GAAGP,QAAQ,CAACK,KAAT,CAAeC,MAAf,IAAyB,CAA/C;AACA,UAAME,UAAU,GACdP,KAAK,CAACI,KAAN,CAAYI,OAAZ,CAAoB,GAApB,KAA4B,CAA5B,IACAR,KAAK,CAACI,KAAN,CAAYI,OAAZ,CAAoB,GAApB,KAA4BR,KAAK,CAACI,KAAN,CAAYC,MAAZ,GAAqB,CAFnD;;AAIA,QAAIF,cAAc,IAAIG,aAAlB,IAAmCC,UAAvC,EAAmD;AACjD,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAD,EAAyB;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgB;AAFT,SAF0C;AAMnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAE3B,cADW;AAEnB4B,UAAAA,IAAI,EAAE3B,YAFa;AAGnB4B,UAAAA,SAAS,EAAErB,SAAS,CAACM,KAHF;AAInBgB,UAAAA,OAAO,EAAErB,QAAQ,CAACK,KAJC;AAKnBJ,UAAAA,KAAK,EAAEA,KAAK,CAACI;AALM,SAAf;AAN6C,OAAzB,CAA5B;AAcA,YAAMiB,gBAAgB,GAAG,MAAMZ,QAAQ,CAACa,IAAT,GAAgBC,UAA/C;AACA,UAAIF,gBAAJ,EAAsBG,gBAAgB,CAACH,gBAAD,CAAhB;AACvB;AACF,GA3BD,CA2BE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAlCD;;GAAM/B,Y;UACYL,U;;;KADZK,Y;AAoCN,eAAe;AAAEkC,EAAAA;AAAF,CAAf","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\nconst { selectedFlight, selectedSeat } = useContext(AppContext);\r\n\r\nconst HandleSubmit = async (ev) => {\r\n  const history = useHistory();\r\n  // TODO if incorrect data entered, highlight which field it came from\r\n  ev.preventDefault();\r\n  try {\r\n    const { firstName, lastName, email } = ev.currentTarget.elements;\r\n\r\n    const firstNameValid = firstName.value.length >= 1;\r\n    const lastNameValid = lastName.value.length >= 1;\r\n    const emailValid =\r\n      email.value.indexOf(\"@\") >= 1 &&\r\n      email.value.indexOf(\".\") <= email.value.length - 3;\r\n\r\n    if (firstNameValid && lastNameValid && emailValid) {\r\n      const response = await fetch(\"/api/add-reservation\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          flight: selectedFlight,\r\n          seat: selectedSeat,\r\n          givenName: firstName.value,\r\n          surname: lastName.value,\r\n          email: email.value,\r\n        }),\r\n      });\r\n      const newReservationId = await response.json().insertedId;\r\n      if (newReservationId) setReservationId(newReservationId);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default { handleSubmit };\r\n"]},"metadata":{},"sourceType":"module"}